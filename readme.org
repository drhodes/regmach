* A graphical register machine simulator
** What?
- Of the ilk found in chapter 5 of SICP.
  
** Why?
- It would be neat to be able to mess around with an interactive
  version of the register machines.

** How?
- rust, wasm, js for the ui, opengl for the display.

* Plan
** Get hello triangle opengl running with wasm in the browser.
Ok, this works, combining these two tutorials.
https://github.com/rustwasm/wasm-bindgen/tree/master/examples/without-a-bundler
https://rustwasm.github.io/wasm-bindgen/exbuild/webgl/

see root/src/wasm.  Still need to figure out nested crates (they are
possible, but it looks like there are several approaches.

** blogpost to explore implementing spacehash with specs

** look into
- font rendering, https://crates.io/crates/rusttype

- wasm rust
  - https://rustwasm.github.io/wasm-bindgen/examples/webgl.html
  - https://rustwasm.github.io/wasm-bindgen/exbuild/webgl/

** Details.
*** Entity Component System
**** Components
- Position
- Draw


*** vector workflow with lyon and opengl
**** Inkscape 
- draw stuff in inkscape.
- select the target objects
- > Path > Combine
- > Path > Object to Path
- [F2] into node edit mode
- (toolbar) insert new nodes into selected segments
- (toolbar) make selected segments lines

**** Programming
- save the svg out to disk.  At this point, what you're looking for is
  the path string, and it can be found at the bottom of the saved svg.
- use lyon_svg to tesselate the path string (two lines of code).



